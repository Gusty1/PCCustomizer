@page "/setting"
@inherits BaseComponent
@inject IThemeService ThemeService

<MudText Typo="Typo.h6" Class="pt-4" GutterBottom="true">設定</MudText>
<MudDivider />

<MudGrid>
    <MudItem xs="12" md="12" sm="12" Class="d-flex align-center">
        @* MudSwitch 雙向綁定到 IsDark 屬性 *@
        <MudSwitch T="bool" @bind-Value="@IsDark"
                   Color="Color.Primary"
                   Label="@(IsDark ? "暗色模式" : "亮色模式")" />
    </MudItem>

    <MudItem xs="12" md="12" sm="12" Class="d-flex align-center">
        <MudButton Variant="Variant.Filled"
                   Color="Color.Info"
                   StartIcon="@Icons.Material.Filled.Feedback"
                   OnClick="@(() => OpenExternalLink("mailto:a0985209465@gmail.com?subject=【組電腦小幫手 意見回饋】&body=請在此輸入您的意見：\n\n"))">
            意見回饋
        </MudButton>
    </MudItem>

    <MudItem xs="12" md="12" sm="12" Class="d-flex align-center">
        <MudText class="me-3" Typo="Typo.body1" Color="Color.Secondary">
            應用程式版本：@AppVersion
        </MudText>
        <MudButton Color="Color.Primary" Variant="Variant.Filled">檢查更新</MudButton>
    </MudItem>

</MudGrid>

@code {
    // 此屬性作為 UI 和 ThemeService 之間的中介
    private bool IsDark
    {
        get => ThemeService.IsDarkMode; // 讀取時，從服務取得狀態
        set => ThemeService.ToggleDarkMode(value); // 寫入時(用戶點擊)，呼叫服務的方法
    }
    
    private string AppVersion { get; set; } = "N/A";

    // 元件初始化時執行
    protected override async Task OnInitializedAsync()
    {
        AppVersion = AppInfo.VersionString; // 獲取 App 版本號
        await base.OnInitializedAsync();
    }
}