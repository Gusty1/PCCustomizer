@page "/"
@inject IDataService DataService
@inject ICategoryService CategoryService
@using PCCustomizer.Models
@implements IDisposable

<MudPaper Class="d-flex flex-column" Style="height: 100%;" Elevation="0">
    <MudText Typo="Typo.h6" Class="pt-4" GutterBottom="true">首頁</MudText>
    <MudDivider />

    <PriceAlertText />

    <MudGrid Class="d-flex align-center my-2 flex-grow-1">
        <MudItem>
            <MudButton OnClick="UpdateData"
                       Variant="Variant.Filled"
                       Color="Color.Secondary"
                       Disabled="@DataService.IsLoading">
                <MudText>更新原價屋資料</MudText>
            </MudButton>
        </MudItem>
        <MudItem>
            @* bind-Value的值一定要大寫 *@
            <MudSelect T="Category?" @bind-Value="SelectedCategory" Label="主分類" Placeholder="選擇主分類"
                       AdornmentColor="Color.Primary" FitContent="false" Clearable="true"
                       Variant="Variant.Outlined">
                @if (categories is not null && categories.Any())
                {
                    @foreach (var category in categories)
                    {
                        <MudSelectItem T="Category?" Value="@category">
                            @category.CategoryName
                        </MudSelectItem>
                    }
                }
            </MudSelect>
        </MudItem>
        <MudItem>
            @if (selectedCategory is not null)
            {
                <MudText Align="Align.Left" Typo="Typo.subtitle1">
                    <strong>@SelectedCategory.Summary</strong>
                </MudText>
            }
        </MudItem>
        <MudItem Class="flex-grow-1 d-flex justify-end align-center">
            @*TODO 補上菜單相關功能*@
            <MudButton Variant="Variant.Filled">新增菜單</MudButton>
            <MudItem Class="mx-2">
                <MudSelect T="int?" @bind-Value="CurrentMenuId" Label="菜單" Variant="Variant.Filled" 
                FitContent="false">
                    @* <MudSelectItem Value="test">1</MudSelectItem> *@
                </MudSelect>
            </MudItem>
            <div style="position: relative; display: inline-block;" 
                 @onmouseenter="() => _popoverOpen = true"
                 @onmouseleave="() => _popoverOpen = false">
                <MudBadge Content="10" Overlap="true" Bordered="true">
                    <MudButton Variant="Variant.Filled" Color="Color.Tertiary" @onclick="TogglePopover">
                        當前菜單
                    </MudButton>
                </MudBadge>
                <MudPopover Open="@_popoverOpen"
                            AnchorOrigin="Origin.BottomLeft"
                            TransformOrigin="Origin.TopCenter"
                            MaxHeight="500">
                    <ChildContent>
                        <MudPaper Class="pa-2">
                            <MudSimpleTable Dense="true" Hover="true" Bordered="true" Striped="false">
                                <tbody>
                                    <tr>
                                        <td rowspan="2">
                                            顯示卡asdsad
                                        </td>
                                        <td>
                                            <MudText>酷炫的商品 A</MudText>
                                        </td>
                                        <td>1</td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <MudText>123</MudText>
                                        </td>
                                        <td>1</td>
                                    </tr>
                                </tbody>
                            </MudSimpleTable>
                            <MudDivider Class="my-2" />
                            <MudStack Row="true" AlignItems="AlignItems.Center">
                                <MudSpacer />
                                <MudText Typo="Typo.h6">總計: $1301</MudText>
                            </MudStack>
                        </MudPaper>
                    </ChildContent>
                </MudPopover>
            </div>
        </MudItem>
    </MudGrid>

    <MudGrid Class="d-flex flex-grow-1 my-2">
        <ProductContent Subcategories="@subcategories"/>
    </MudGrid>
</MudPaper>

@code {
    private List<Category> categories = new();
    private List<Subcategory> subcategories = new();
    private List<Product> products = new();
    private int? currentMenuId = null;
    private int? CurrentMenuId
    {
        get => currentMenuId;
        set
        {
            currentMenuId = value;
        }
    }
    // 這是真正儲存值的私有欄位 (小寫開頭)
    private Category? selectedCategory;
    // 這是用來綁定 UI 的公有屬性 (大寫開頭)
    private Category? SelectedCategory
    {
        get => selectedCategory;
        set
        {
            selectedCategory = value;

            if (selectedCategory is null)
            {
                subcategories = new List<Subcategory>();
            }
            else
            {
                subcategories = categories?.FirstOrDefault(c => c.CategoryId == selectedCategory.CategoryId)?.Subcategories ?? new List<Subcategory>();
                subcategories.OrderBy(s => s.CategoryId);
            }
        }
    }
    private bool _popoverOpen = false;

    private void TogglePopover()
    {
        _popoverOpen = !_popoverOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        DataService.OnStateChanged += StateHasChanged;
        categories = await CategoryService.GetCategoriesWithDetailsAsync();
        await base.OnInitializedAsync();
    }

    private async Task UpdateData()
    {
        SelectedCategory = null;
        _ = DataService.SeedDataIfNeededAsync();
        categories = await CategoryService.GetCategoriesWithDetailsAsync();
    }

    public void Dispose()
    {
        DataService.OnStateChanged -= StateHasChanged;
    }
}